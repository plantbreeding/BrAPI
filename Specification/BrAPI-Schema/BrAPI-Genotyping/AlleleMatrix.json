{
    "$defs": {
        "AlleleMatrix": {
            "properties": {
                "callSets": {
                    "description": "A list of unique identifiers for the CallSets contained in the matrix response. This array should match the ordering for columns in the matrix. A CallSet is a unique combination of a Sample and a sequencing event. CallSets often have a 1-to-1 relationship with Samples, but this is not always the case.",
                    "items": {
                        "$ref": "CallSet.json#/$defs/CallSet"
                    },
                    "referencedAttribute": "alleleMatrices",
                    "relationshipType": "many-to-many",
                    "type": "array"
                },
                "dataMatrices": {
                    "description": "The 'dataMatrices' are an array of matrix objects that hold the allele data and associated metadata. Each matrix should be the same size and orientation, aligned with the \"callSetDbIds\" as columns and the \"variantDbIds\" as rows.",
                    "items": {
                        "description": "This is a single data matrix. It could be the allele matrix or an additional layer of metadata associated with each genotype value.",
                        "title": "DataMatrix",
                        "properties": {
                            "dataMatrix": {
                                "description": "The two dimensional array of data, providing the allele matrix or an additional layer of metadata associated with each genotype value. Each matrix should be the same size and orientation, aligned with the \"callSetDbIds\" as columns and the \"variantDbIds\" as rows.",
                                "items": {
                                    "description": "An array of rows in the data matrix",
                                    "items": {
                                        "description": "All the values per row (columns) in the data matrix",
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "type": [
                                    "null",
                                    "array"
                                ]
                            },
                            "dataMatrixAbbreviation": {
                                "description": "The abbreviated code of the field represented in this data matrix. These codes should match the VCF standard when possible and the key word \"GT\" is reserved for the allele matrix. Examples of other metadata matrices include: \"GQ\", \"RD\", and \"HQ\"\n<br> This maps to a FORMAT field in the VCF file standard.",
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "dataMatrixName": {
                                "description": "The name of the field represented in this data matrix. The key word \"Genotype\" is reserved for the allele matrix. Examples of other metadata matrices include: \"Genotype Quality\", \"Read Depth\", and \"Haplotype Quality\"\n<br> This maps to a FORMAT field in the VCF file standard.",
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "dataType": {
                                "description": "The type of field represented in this data matrix. This is intended to help parse the data out of JSON.",
                                "enum": [
                                    "string",
                                    "integer",
                                    "float",
                                    "boolean",
                                    null
                                ],
                                "type": [
                                    "null",
                                    "string"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "expandHomozygotes": {
                    "description": "Should homozygotes be expanded (true) or collapsed into a single occurrence (false)",
                    "type": [
                        "null",
                        "boolean"
                    ]
                },
                "pagination": {
                    "description": "Pagination for the matrix",
                    "title": "MatrixPage",
                    "items": {
                        "properties": {
                            "dimension": {
                                "description": "The dimension of the matrix being paginated",
                                "enum": [
                                    "CALLSETS",
                                    "VARIANTS",
                                    null
                                ],
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "page": {
                                "description": "the requested page number (zero indexed)",
                                "type": [
                                    "null",
                                    "integer"
                                ]
                            },
                            "pageSize": {
                                "description": "the maximum number of elements per page in this dimension of the matrix",
                                "type": [
                                    "null",
                                    "integer"
                                ]
                            },
                            "totalCount": {
                                "description": "The total number of elements that are available on the server and match the requested query parameters.",
                                "type": [
                                    "null",
                                    "integer"
                                ]
                            },
                            "totalPages": {
                                "description": "The total number of pages of elements available on the server. This should be calculated with the following formula. \n<br/>totalPages = CEILING( totalCount / requested_page_size)",
                                "type": [
                                    "null",
                                    "integer"
                                ]
                            }
                        },
                        "type": "object"
                    },
                    "type": [
                        "null",
                        "array"
                    ]
                },
                "sepPhased": {
                    "description": "The string used as a separator for phased allele calls.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "sepUnphased": {
                    "description": "The string used as a separator for unphased allele calls.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "unknownString": {
                    "description": "The string used as a representation for missing data.",
                    "type": [
                        "null",
                        "string"
                    ]
                },
                "variantSets": {
                    "description": "A list of unique identifiers for the VariantSets contained in the matrix response. A VariantSet is a data set originating from a sequencing event. Often, users will only be interested in data from a single VariantSet, but in some cases a user might be interested in a matrix with data from multiple VariantSets.",
                    "items": {
                        "$ref": "VariantSet.json#/$defs/VariantSet"
                    },
                    "referencedAttribute": "alleleMatrices",
                    "relationshipType": "many-to-many",
                    "type": "array"
                },
                "variants": {
                    "description": "A list of unique identifiers for the Variants contained in the matrix response. This array should match the ordering for rows in the matrix.",
                    "items": {
                        "$ref": "Variant.json#/$defs/Variant"
                    },
                    "referencedAttribute": "alleleMatrices",
                    "relationshipType": "many-to-many",
                    "type": "array"
                }
            },
            "required": [
                "callSets",
                "variantSets"
            ],
            "title": "AlleleMatrix",
            "type": "object",
            "brapi-metadata": {
                "primaryModel": true
            }
        }
    },
    "$id": "https://brapi.org/Specification/BrAPI-Schema/BrAPI-Genotyping/AlleleMatrix.json",
    "$schema": "http://json-schema.org/draft/2020-12/schema"
}